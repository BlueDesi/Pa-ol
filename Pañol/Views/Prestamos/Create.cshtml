@model Pañol.Models.Prestamo

@{
    ViewBag.Title = "Create";
}

<h2>Crear Préstamo</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Prestamo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="UsuarioId" value="@ViewBag.UsuarioId" />
        <!-- Datos del usuario logueado -->
        <div class="form-group">
            <label class="control-label col-md-2">EMATP / Profesor a cargo del pañol</label>
            <div class="col-md-10">
                <p class="form-control-static">
                    <strong>@ViewBag.UsuarioNombreApellido</strong><br />
                    <span>@ViewBag.UsuarioRol</span><br />
                    <span>@ViewBag.UsuarioEmail</span>
                </p>
            </div>
        </div>

        <hr />

        <!-- Profesor solicitante -->
        <div class="form-group">
            <label class="control-label col-md-2">
                Profesor solicitante
                <span class="text-muted">(Debe estar registrado como profesor)</span>
            </label>
            <div class="col-md-10">
                @Html.DropDownList("ProfesorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProfesorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Curso -->
        <div class="form-group">
            @Html.LabelFor(model => model.Curso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Curso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Curso, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Fecha de entrega (ahora) -->
        <div class="form-group">
            @Html.LabelFor(model => model.FechaHora_E, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" name="FechaHora_E" class="form-control" value="@DateTime.Now.ToString("dd-MM-yyyy HH:mm")" readonly />
            </div>
        </div>

        <!-- Fecha estimada de devolución
        <div class="form-group">
            @Html.LabelFor(model => model.FechaHora_D, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaHora_D, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaHora_D, "", new { @class = "text-danger" })
            </div>
        </div> -->
        <!-- Quién retira -->
        <div class="form-group">
            @Html.LabelFor(model => model.Retira, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Retira, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Retira, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Ítems disponibles -->
        <div class="form-group">
            <label class="control-label col-md-2">Ítems disponibles</label>
            <div class="col-md-10">
                @if ((ViewBag.ItemsDisponibles as List<Pañol.Models.Item>).Any())
                {
                    foreach (var item in ViewBag.ItemsDisponibles as List<Pañol.Models.Item>)
                    {
                        <div>
                            <input type="checkbox" name="selectedItems" value="@item.Id" />
                            @item.Detalle
                        </div>
                    }
                }
                else
                {
                    <p>No hay ítems disponibles para préstamo.</p>
                }
            </div>
        </div>

        <!-- Botón de enviar -->
        <div class="form-group text-center">
            <input type="submit" value="Generar Préstamo" class="btn btn-success btn-lg" />
        </div>
    </div>
}
@Html.ActionLink("Volver al panel", "VolverAlPanel", "Panel", null, new { @class = "btn btn-primary" })

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")}